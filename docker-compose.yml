services:
  # Fetcher Sidekiq - получает данные с API и публикует в NATS
  fetcher-sidekiq:
    build: ./fetcher
    container_name: city-weather-fetcher-sidekiq
    depends_on:
      - redis-fetcher
      - nats
    env_file:
      - .env
    environment:
      WEATHER_API_KEY: ${WEATHER_API_KEY}
      NATS_URL: nats://nats-server:4222
      REDIS_URL: redis://redis-fetcher:6379/0
    volumes:
      - ./fetcher:/app
    working_dir: /app
    command: bundle exec sidekiq -r ./config/initializers/sidekiq_cron.rb -C config/sidekiq.yml

  # Viewer - Rails-приложение (отображение данных)
  viewer:
    build: ./viewer
    container_name: city-weather-viewer
    depends_on:
      - nats
      - postgres
    env_file:
      - .env
    environment:
      NATS_URL: nats://nats-server:4222
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB_NAME}
    ports:
      - "3000:3000"
    volumes:
      - ./viewer:/app
    working_dir: /app
    command: bash -c "bin/rails s -b 0.0.0.0 -p 3000"

  # Viewer Sidekiq - синхронизация данных из NATS в Postgres
  viewer-sidekiq:
    build: ./viewer
    container_name: city-weather-viewer-sidekiq
    depends_on:
      - redis-viewer
      - nats
      - postgres
    env_file:
      - .env
    environment:
      NATS_URL: nats://nats-server:4222
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB_NAME}
      REDIS_URL: redis://redis-viewer:6379/0
    volumes:
      - ./viewer:/app
    working_dir: /app
    command: bundle exec sidekiq -C config/sidekiq.yml

  # Redis для fetcher
  redis-fetcher:
    image: redis:7
    container_name: redis-fetcher
    ports:
      - "6379:6379"

  # Redis для viewer
  redis-viewer:
    image: redis:7
    container_name: redis-viewer
    ports:
      - "6380:6379"

  # NATS (общий)
  nats:
    image: nats:2.11.8
    container_name: nats-server
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["-js", "-DV"]

  # Postgres (общий)
  postgres:
    image: postgres:17
    container_name: postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
